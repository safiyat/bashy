# brew installs many bins here.
export PATH="/usr/local/sbin:$PATH"

function prepend_to_path() {
    # set -x
    path="$1"

    if [ -d "${path}" ]; then
        export PATH="${path}:$PATH"
    fi
    # set +x
}

function append_to_ldflags() {
    # set -x
    ld_path="$1"

    if [ -d "${ld_path}" ]; then
        export LDFLAGS="${LDFLAGS} -L${ld_path}"
    fi
    # set +x
}

function append_to_cppflags() {
    # set -x
    cpp_path="$1"

    if [ -d "${cpp_path}" ]; then
        export CPPFLAGS="${CPPFLAGS} -I${cpp_path}"
        export CFLAGS="${CFLAGS} -I${cpp_path}"
    fi
    # set +x
}

brew_prefix=$(brew --prefix)

###############################################################################
###############################################################################

# If you need to have openssl@1.1 first in your PATH run:
prepend_to_path "${brew_prefix}/opt/openssl@1.1/bin"

###############################################################################
###############################################################################

# For compilers to find openssl@1.1 you may need to set:
append_to_ldflags "${brew_prefix}/opt/openssl@1.1/lib"
append_to_cppflags "${brew_prefix}/opt/openssl@1.1/include"

###############################################################################
###############################################################################

# For compilers to find readline you may need to set:
#export LDFLAGS="-L/usr/local/opt/readline/lib"
#export CPPFLAGS="-I/usr/local/opt/readline/include"

###############################################################################
###############################################################################

# If you need to have sqlite first in your PATH run:
prepend_to_path "${brew_prefix}/opt/sqlite/bin"

# For compilers to find sqlite you may need to set:
#export LDFLAGS="-L/usr/local/opt/sqlite/lib"
#export CPPFLAGS="-I/usr/local/opt/sqlite/include"

###############################################################################
###############################################################################

# If you need to have python@3.7 first in your PATH run:
prepend_to_path "${brew_prefix}/opt/python@3.7/bin"
prepend_to_path "${brew_prefix}/opt/python@3.7/Frameworks/Python.framework/Versions/3.7/bin"

# For compilers to find python@3.7 you may need to set:
#export LDFLAGS="-L/usr/local/opt/python@3.7/lib"

###############################################################################
###############################################################################

# By default non-brewed cpan modules are installed to the Cellar. If you wish
# for your modules to persist across updates we recommend using `local::lib`.
# You can set that up like this:
#PERL_MM_OPT="INSTALL_BASE=$HOME/perl5" cpan local::lib
#eval "$(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib=$HOME/perl5)"

###############################################################################
###############################################################################

# python@3.9 is keg-only, which means it was not symlinked into /usr/local,
# because this is an alternate version of another formula.
# If you need to have python@3.9 first in your PATH run:
#export PATH="/usr/local/opt/python@3.9/bin:$PATH"

# For compilers to find python@3.9 you may need to set:
#export LDFLAGS="-L/usr/local/opt/python@3.9/lib"

###############################################################################
###############################################################################

# If you need to have ruby first in your PATH run:
prepend_to_path "${brew_prefix}/opt/ruby/bin"
# For compilers to find ruby you may need to set:
#export LDFLAGS="-L/usr/local/opt/ruby/lib"
#export CPPFLAGS="-I/usr/local/opt/ruby/include"

###############################################################################
###############################################################################

# Vim 8.2
prepend_to_path "${brew_prefix}/Cellar/vim/8.2.1800_1/bin/"

###############################################################################
###############################################################################

# git 2.28.0
prepend_to_path "${brew_prefix}/Cellar/git/2.28.0/bin/"

###############################################################################
###############################################################################

# If you need to use these commands with their normal names, you
# can add a "gnubin" directory to your PATH from your bashrc like:
prepend_to_path "${brew_prefix}/opt/coreutils/libexec/gnubin"

###############################################################################
###############################################################################

# For compilers to find libffi you may need to set:
#export LDFLAGS="-L/usr/local/opt/libffi/lib"
#export CPPFLAGS="-I/usr/local/opt/libffi/include"

# For pkg-config to find libffi you may need to set:
#export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"

###############################################################################
###############################################################################

# Guile libraries
export GUILE_LOAD_PATH="/usr/local/share/guile/site/3.0"
export GUILE_LOAD_COMPILED_PATH="/usr/local/lib/guile/3.0/site-ccache"
export GUILE_SYSTEM_EXTENSIONS_PATH="/usr/local/lib/guile/3.0/extensions"

###############################################################################
###############################################################################

# If you are going to use the Guile bindings you will need to add the following
# to your .bashrc or equivalent in order for Guile to find the TLS certificates
# database:
export GUILE_TLS_CERTIFICATE_DIRECTORY=/usr/local/etc/gnutls/

###############################################################################
###############################################################################

# If you need to use these commands with their normal names, you
# can add a "gnubin" directory to your PATH from your bashrc like:
prepend_to_path "${brew_prefix}/opt/grep/libexec/gnubin"

###############################################################################
###############################################################################

# mysql@5.7 is keg-only, which means it was not symlinked into /usr/local,
# because this is an alternate version of another formula.

# If you need to have mysql@5.7 first in your PATH run:
prepend_to_path "${brew_prefix}/opt/mysql@5.7/bin"

# For compilers to find mysql@5.7 you may need to set:
#export LDFLAGS="-L/usr/local/opt/mysql@5.7/lib"
#export CPPFLAGS="-I/usr/local/opt/mysql@5.7/include"

# For pkg-config to find mysql@5.7 you may need to set:
#export PKG_CONFIG_PATH="/usr/local/opt/mysql@5.7/lib/pkgconfig"

###############################################################################
###############################################################################

# If you need to have ncurses first in your PATH run:
prepend_to_path "${brew_prefix}/opt/ncurses/bin"

# For compilers to find ncurses you may need to set:
#export LDFLAGS="-L/usr/local/opt/ncurses/lib"
#export CPPFLAGS="-I/usr/local/opt/ncurses/include"

# For pkg-config to find ncurses you may need to set:
#export PKG_CONFIG_PATH="/usr/local/opt/ncurses/lib/pkgconfig"

###############################################################################
###############################################################################

# If you need to have mongodb-community@4.4 first in your PATH run:
prepend_to_path "${brew_prefix}/opt/mongodb-community@4.4/bin"

###############################################################################
###############################################################################

# For compilers to find readline you may need to set:
#export LDFLAGS="-L/usr/local/opt/readline/lib"
#export CPPFLAGS="-I/usr/local/opt/readline/include"

# For pkg-config to find readline you may need to set:
#export PKG_CONFIG_PATH="/usr/local/opt/readline/lib/pkgconfig"

###############################################################################
###############################################################################

# If you need to have icu4c first in your PATH run:
prepend_to_path "${brew_prefix}/opt/icu4c/bin"
prepend_to_path "${brew_prefix}/opt/icu4c/sbin"

# For compilers to find icu4c you may need to set:
#export LDFLAGS="-L/usr/local/opt/icu4c/lib"
#export CPPFLAGS="-I/usr/local/opt/icu4c/include"

# For pkg-config to find icu4c you may need to set:
#export PKG_CONFIG_PATH="/usr/local/opt/icu4c/lib/pkgconfig"

###############################################################################
###############################################################################

unset CFLAGS
# append_to_ldflags "/usr/local/lib"
append_to_ldflags "${brew_prefix}/lib"
append_to_cppflags "/usr/local/include"
append_to_cppflags "${brew_prefix}/include"

###############################################################################
###############################################################################

prepend_to_path "${brew_prefix}/opt/libxml2/bin"
append_to_ldflags "${brew_prefix}/opt/libxml2/lib"
append_to_cppflags "${brew_prefix}/opt/libxml2/include"

###############################################################################
###############################################################################

prepend_to_path "${brew_prefix}/opt/libiconv/bin"
append_to_ldflags "${brew_prefix}/opt/libiconv/lib"
append_to_cppflags "${brew_prefix}/opt/libiconv/include"

###############################################################################
###############################################################################

prepend_to_path "${brew_prefix}/opt/openjdk/bin"
append_to_cppflags "${brew_prefix}/opt/openjdk/include"

###############################################################################
###############################################################################

append_to_ldflags  "${brew_prefix}/opt/openblas/lib"
append_to_cppflags "${brew_prefix}/opt/openblas/include"

###############################################################################
###############################################################################

prepend_to_path "${brew_prefix}/share/google-cloud-sdk/bin/"
